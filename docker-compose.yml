# This file is a part of the testbed project.
# Please read the comments below carefully if you are changing this file.
# 1. Volume mounts MUST use ${PWD} instead of .

name: testbed
services:
  master:
    image: ghcr.io/ucla-irl/testbed-master:latest
    restart: unless-stopped
    init: true
    tty: true
    volumes:
      - ${PWD}:/testbed
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      MANAGED_HOST: ${MANAGED_HOST}
      ROOT_DIR: ${PWD}
    entrypoint: /bin/bash
    command: [scripts/master.sh]
    working_dir: /testbed
    healthcheck:
      test: [CMD, stat, /testbed/dist/.master-ready]
      interval: 3s

  caddy:
    image: caddy:2
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - ${PWD}/dist/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ${PWD}/dist/caddy/data:/data
      - ${PWD}/dist/caddy/config:/config
    depends_on:
      master: { condition: service_healthy }

  nfd:
    image: ghcr.io/named-data/nfd:20240420
    init: true
    volumes:
      - /run/nfd:/run/nfd
      - ${PWD}/anchors:/keys/anchors:ro
      - ${PWD}/dist/nfd:/config
    ports:
      - 6363:6363
      - 6363:6363/udp
    entrypoint: /bin/bash
    command: /config/entrypoint.sh
    restart: unless-stopped
    healthcheck:
      test: [CMD, nfdc, status]
      interval: 5s
    depends_on:
      master: { condition: service_healthy }

  nfd-http-status-server:
    image: ghcr.io/named-data/nfd-status-http-server:20240420
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }

  ndnpingserver:
    image: ghcr.io/named-data/ndn-tools:20240505
    tty: true
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/dist/ndnpingserver:/config
    entrypoint: /bin/bash
    command: /config/entrypoint.sh
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }

  serve-certs:
    image: ghcr.io/yoursunny/ndn6-tools:20240505
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/dist/ndncert/site.ndncert:/certs/site.ndncert:ro
      - ${PWD}/anchors:/keys/anchors:ro
    entrypoint: /bin/bash
    command: ['-c', 'ndn6-serve-certs /keys/anchors/*.base64  /certs/*.ndncert']
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }

  nlsr:
    image: ghcr.io/pulsejet/nlsr@sha256:567558e8ce37453f410cf2cdc612c1bf11252de0b935b8b7d5da41ce6381f5de
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/anchors:/keys/anchors:ro
      - ${PWD}/dist/nlsr:/config
    environment:
      NDN_LOG: nlsr.*=DEBUG
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }
      serve-certs: { condition: service_started }

  ndn-python-repo:
    image: ghcr.io/ucla-irl/ndn-python-repo:20240505
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/dist/ndn-python-repo:/config
      - ${PWD}/dist/ndn-python-repo/repo.conf:/config/repo.conf:ro
    environment:
      HOME: /config
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }

  ndncert:
    image: ghcr.io/named-data/ndncert-ca:20240507
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/dist/ndncert:/config
      - ${PWD}/dist/ndncert/ndncert-mail.conf:/etc/ndncert/ndncert-mail.conf:ro
      - ${PWD}/dist/ndncert/ndncert-ca.conf:/config/ndncert-ca.conf:ro
    environment:
      NDN_LOG: '*=TRACE'
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }

  http-ca-server:
    image: ghcr.io/ucla-irl/http-ca-server:latest
    profiles: [root-ca]  # only run on Root CA
    init: true
    tty: true
    volumes:
      - /var/lib/ndn/ndncert-ca:/config
      - ${PWD}/dist/root-ca/cert-store:/config/cert-store
      - ${PWD}/dist/root-ca/http-ca-server.yml:/config/http-ca-server.yml:ro
    restart: unless-stopped
    depends_on:
      master: { condition: service_healthy }
