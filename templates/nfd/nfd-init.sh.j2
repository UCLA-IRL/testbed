#!/bin/bash

# Tell bash to ignores errors in this script:
set +e

# Some issues with startup time, we need to sleep to make sure nfd is fully up
sleep 5

# set default strategy to best-route (bestroute2)
{% if hyperbolic_state == "on" %}
/usr/bin/nfdc strategy set ndn:/ ndn:/localhost/nfd/strategy/asf/%FD%04/max-timeouts~3
/usr/bin/nfdc strategy set /ndn/web ndn:/localhost/nfd/strategy/asf/%FD%04/max-timeouts~5
nfdc strategy set  ndn:/ndn/web/stats  ndn:/localhost/nfd/strategy/best-route
{% else %}
/usr/bin/nfdc strategy set  ndn:/ ndn:/localhost/nfd/strategy/best-route
{% endif %}

# Set multicast strategy
/usr/bin/nfdc strategy set  /ndn/multicast /localhost/nfd/strategy/multicast
/usr/bin/nfdc strategy set  /ndn/broadcast /localhost/nfd/strategy/multicast
/usr/bin/nfdc strategy set  /localhost     /localhost/nfd/strategy/multicast

# Workspace strategies
/usr/bin/nfdc strategy set  /ndn/irl-workspace/32=sync  /localhost/nfd/strategy/multicast
/usr/bin/nfdc strategy set  /ndn/ndncomm2024/32=sync  /localhost/nfd/strategy/multicast
/usr/bin/nfdc strategy set  /ndn/localfirst/meetingnotes/32=sync /localhost/nfd/strategy/multicast

# Default local access strategy
nfdc strategy set ndn:{{ default_prefix }} ndn:/localhost/nfd/strategy/access

# Just in case an on-demand face was created since NFD started, destroy it.
# This is a temporary fix because an update of a face with mtu change does not currently work.

{% for neighbor, data in neighbors.items() %}
nfdc face destroy udp4://{{ hostvars[neighbor].host_ip }}:{{ hostvars[neighbor].udp_port }}
nfdc face create udp4://{{ hostvars[neighbor].host_ip }}:{{ hostvars[neighbor].udp_port }} persistency permanent mtu 1450 reliability on
{% endfor %}

