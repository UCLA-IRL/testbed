#!/bin/bash

set -e

# Change directory to containing folder
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd $SCRIPT_DIR

# Variables
PREFIX="{{ default_prefix }}"
OPERATOR="{{ operator_user }}"
HOSTNAME="{{ inventory_hostname }}"
ROUTER="{{ router_name }}"

# Home and keys directories
PRIVATE_DIR="$(pwd)/private"
NDNCERT_DIR="$(pwd)/../ndncert/private"

# Make sure the private directory exists
mkdir -p "${PRIVATE_DIR}"

# TODO: check expiry before removal
rm -f "${PRIVATE_DIR}/*.csr"
rm -f "${PRIVATE_DIR}/operator.cert"
rm -f "${PRIVATE_DIR}/router.cert"

# Function to allow call to fail and return exit code
function allow_fail { set +e ; $@ ; CODE=$? ; set -e; return $CODE; }

# Issue operator cert
if [ ! -s "${PRIVATE_DIR}/operator.cert" ]
then
  export HOME="${PRIVATE_DIR}"
  allow_fail ndnsec sign-req "${PREFIX}/%C1.Operator/${OPERATOR}" > "${PRIVATE_DIR}/unsigned_operator.csr"
  if [ $? -ne 0 ]
  then
    echo -e "Generating new operator keypair"
    ndnsec key-gen -n "${PREFIX}/%C1.Operator/${OPERATOR}" > "${PRIVATE_DIR}/unsigned_operator.csr"
  else
    echo -e "Operator keypair already exists"
  fi

  export HOME="${NDNCERT_DIR}"
  ndnsec cert-gen -S 202204010000 -E 20320401000 -s "${PREFIX}" \
    -r "${PRIVATE_DIR}/unsigned_operator.csr" > "${PRIVATE_DIR}/operator.cert"

  export HOME="${PRIVATE_DIR}"
  ndnsec cert-install -f "${PRIVATE_DIR}/operator.cert"
fi

# Issue router cert
if [ ! -s "${PRIVATE_DIR}/router.cert" ]
then
  export HOME="${PRIVATE_DIR}"
  allow_fail ndnsec sign-req "${PREFIX}/%C1.Router/${ROUTER}" > "${PRIVATE_DIR}/unsigned_router.csr"
  if [ $? -ne 0 ]
  then
    echo -e "Generating new router keypair"
    ndnsec key-gen -n "${PREFIX}/%C1.Router/${ROUTER}" > "${PRIVATE_DIR}/unsigned_router.csr"
  else
    echo -e "Router keypair already exists"
  fi

  ndnsec cert-gen -S 201802010000 -E 202802010000 -s "${PREFIX}/%C1.Operator/${OPERATOR}" \
    -r "${PRIVATE_DIR}/unsigned_router.csr" > "${PRIVATE_DIR}/router.cert"

  ndnsec cert-install -f "${PRIVATE_DIR}/router.cert"
fi